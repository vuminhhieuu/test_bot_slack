name: PR Notifications to Slack

on:
  pull_request:
    types: [opened, ready_for_review, closed]
  issue_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Lưu Slack user map vào file JSON
      - name: Save Slack user map
        run: echo '${{ secrets.SLACK_USER_MAP }}' > usermap.json

      # Helper script để map GitHub username sang Slack ID
      - name: Create helper script
        run: |
          cat << 'EOF' > map_user.sh
          #!/usr/bin/env bash
          user="$1"
          id=$(jq -r --arg u "$user" '.[$u]' usermap.json)
          if [ "$id" != "null" ]; then
            echo "<@$id>"
          else
            echo "@$user"
          fi
          EOF
          chmod +x map_user.sh

      # Ready (khi comment có từ ready)
      - name: Notify PR Ready
        if: github.event.issue.pull_request && contains(github.event.comment.body, 'ready')
        run: |
          reviewers=$(echo "${{ github.event.comment.body }}" | grep -o '@[a-zA-Z0-9._-]\+' | tr -d '@')
          mentions=""
          for r in $reviewers; do
            mentions="$mentions $(./map_user.sh $r)"
          done
          text=":eyes: *PR Ready for Review*\n*${{ github.event.issue.title }}*\nAuthor: $(./map_user.sh ${{ github.event.comment.user.login }})\nReviewers:$mentions\n:link: <${{ github.event.issue.html_url }}|View PR>"
          response=$(curl -s -X POST -H 'Content-type: application/json' \
            --data "{\"channel\":\"#pull-request-status-checking\",\"text\":\"$text\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }})
          echo "THREAD_TS=$(echo $response | jq -r '.ts')" >> $GITHUB_ENV

      # Comment thông thường
      - name: Notify Reviewer Comment
        if: github.event.issue.pull_request && !contains(github.event.comment.body, 'ready')
        run: |
          mentions=""
          reviewers=$(echo "${{ github.event.comment.body }}" | grep -o '@[a-zA-Z0-9._-]\+' | tr -d '@')
          for r in $reviewers; do
            mentions="$mentions $(./map_user.sh $r)"
          done
          text=":speech_balloon: *New Comment on PR*\n*${{ github.event.issue.title }}*\nBy: $(./map_user.sh ${{ github.event.comment.user.login }})\nComment: ${{ github.event.comment.body }}\nMentions:$mentions\n:link: <${{ github.event.comment.html_url }}|View Comment>"
          curl -s -X POST -H 'Content-type: application/json' \
            --data "{\"channel\":\"#pull-request-status-checking\",\"text\":\"$text\",\"thread_ts\":\"${{ env.THREAD_TS }}\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      # Khi merge
      - name: Notify Merge
        if: github.event.pull_request.merged == true
        run: |
          text=":white_check_mark: *PR Merged*\n*${{ github.event.pull_request.title }}*\nAuthor: $(./map_user.sh ${{ github.event.pull_request.user.login }})\nMerged by: $(./map_user.sh $GITHUB_ACTOR)\n:link: <${{ github.event.pull_request.html_url }}|View PR>"
          curl -s -X POST -H 'Content-type: application/json' \
            --data "{\"channel\":\"#pull-request-status-checking\",\"text\":\"$text\",\"thread_ts\":\"${{ env.THREAD_TS }}\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
